[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12"
channels = "^4.0.0"
daphne = "^4.0.0"
django = "^5.0"
django-storages = { version = "^1.13.1", extras = ["azure"] }
djangorestframework = "^3.14.0"
geopy = "^2.4.0"
holidays = "^0.53"
pillow = "^10.0.0"
whitenoise = "^6.4.0"

# Things needed for azure deployment.
azure-identity = { version = "^1.13.0", optional = true }
channels-redis = { version = "^4.1.0", optional = true }
mssql-django = { version = "^1.4", optional = true }

[tool.poetry.extras]
azure = ["azure-identity", "channels-redis", "mssql-django"]

[tool.poetry.group.lint.dependencies]
mypy = ">=1.5.0"
ruff = ">=0.1.3"

[tool.poetry.group.misc.dependencies]
pydantic = "^2.3.0"
aiohttp = "^3.8.5"
aiodns = "^3.0.0"

[tool.poetry.group.types.dependencies]
django-stubs = ">=1.13.1"
djangorestframework-stubs = ">=1.8.0"

[tool.mypy]
files = "."
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
show_error_codes = true
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
  "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = [
  "channels.*",
  "geopy.*",
]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "treasure.settings"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
extend-exclude = [
  "hunt/migrations",
]
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "C90",    # mccabe
  "COM",    # flake8-commas
  "D",      # pydocstyle
  "ERA",    # eradicate
  "PD",     # pandas-vet
  "PLR",    # pylint-refactor
  "T20",    # flake8-print
  "ANN401", # any-type
  "E203",   # whitespace before ':'
  "S101",   # assert-used
]
extend-safe-fixes = [
  "TCH", # flake8-type-checking
]
unfixable = [
  "F841", # unused-variable
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
